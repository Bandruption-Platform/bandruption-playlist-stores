name: PR Checks

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened, ready_for_review ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup CI Environment
        run: |
          # Set CI environment variable to skip watchman in tests
          echo "CI=true" >> $GITHUB_ENV
          # Disable telemetry
          echo "EXPO_NO_TELEMETRY=1" >> $GITHUB_ENV
          echo "TURBO_TELEMETRY_DISABLED=1" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        env:
          WALLET_MNEMONIC_ENCRYPTION_KEY: ${{ secrets.WALLET_MNEMONIC_ENCRYPTION_KEY }}
          NODELY_API_URL: ${{ secrets.NODELY_API_URL }}
          NODELY_INDEXER_URL: ${{ secrets.NODELY_INDEXER_URL }}
          PINATA_API_KEY: ${{ secrets.PINATA_API_KEY }}
          PINATA_SECRET: ${{ secrets.PINATA_SECRET }}
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        run: |
          echo "ðŸ”¨ Building all packages (includes type-check and lint)..."
          npm run build
          echo "âœ… Build successful!"

      - name: Run tests
        env:
          WALLET_MNEMONIC_ENCRYPTION_KEY: ${{ secrets.WALLET_MNEMONIC_ENCRYPTION_KEY }}
          NODELY_API_URL: ${{ secrets.NODELY_API_URL }}
          NODELY_INDEXER_URL: ${{ secrets.NODELY_INDEXER_URL }}
          PINATA_API_KEY: ${{ secrets.PINATA_API_KEY }}
          PINATA_SECRET: ${{ secrets.PINATA_SECRET }}
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        run: |
          echo "ðŸ§ª Running tests..."
          npm run test
          echo "âœ… All tests passed!"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: build-artifacts
          path: |
            apps/web/dist
            apps/server/dist
            packages/*/dist
          retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run npm audit
        run: |
          echo "ðŸ”’ Running npm audit..."
          npm audit --production || true
          echo "Security scan complete"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'