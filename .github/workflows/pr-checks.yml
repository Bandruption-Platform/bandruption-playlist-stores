name: PR Checks

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened, ready_for_review ]
  pull_request_review:
    types: [ submitted ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies with legacy peer deps
        run: npm ci --legacy-peer-deps

      - name: Type check
        run: npm run type-check
        continue-on-error: false

      - name: Lint with error handling
        run: |
          echo "Running lint checks..."
          if ! npm run lint; then
            echo "❌ Linting failed. Please fix the issues above."
            exit 1
          fi
          echo "✅ Linting passed!"

      - name: Build all packages
        run: |
          echo "Building all packages..."
          npm run build

      - name: Run tests
        run: |
          echo "Running tests..."
          npm run test

      - name: Build verification
        run: |
          echo "Verifying individual app builds..."
          cd apps/web && npm run build
          cd apps/server && npm run build

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies for security scan
        run: npm install --legacy-peer-deps

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Job to ensure all required checks pass
  all-checks:
    name: All Required Checks
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    if: always()
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.build-and-test.result }}" == "success" && "${{ needs.security-scan.result }}" == "success" ]]; then
            echo "✅ All required checks passed!"
          else
            echo "❌ Some required checks failed:"
            echo "  - Build and Test: ${{ needs.build-and-test.result }}"
            echo "  - Security Scan: ${{ needs.security-scan.result }}"
            exit 1
          fi 